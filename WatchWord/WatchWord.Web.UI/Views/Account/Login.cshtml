@using WatchWord.Web.UI.Infrastructure.Helpers
@model WatchWord.Web.UI.Models.Account.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<div class="row">
    <div class="col-sm-offset-3 col-sm-6 col-md-offset-4 col-md-4">
        @using (Html.BeginForm("LogIn", "Account", FormMethod.Post, new {@class = "registration-form"}))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(n => n.ReturnUrl)

            <h2 class="text-center">Log in</h2>

            @Html.BootstrapValidationSummaryFor(true)

            <div class="form-group">
                @Html.TextBoxFor(n => n.Login, new {@class = "form-control", placeholder = Html.DisplayNameFor(n => n.Login)})
                @Html.ValidationMessageFor(n => n.Login)
            </div>

            <div class="form-group">
                @Html.PasswordFor(n => n.Password, new {@class = "form-control", placeholder = Html.DisplayNameFor(n => n.Password)})
                @Html.ValidationMessageFor(n => n.Password)
            </div>

            <div class="form-group">
                <input type="submit" class="btn btn-info btn-block" value="Log In"/>
            </div>

            <div class="form-group text-center">
                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(n => n.IsPersistent) @Html.DisplayNameFor(n => n.IsPersistent)
                    </label>
                </div>
            </div>
            <div class="form-group text-center">
                @Html.ActionLink("Need a new account", "SignUp", null, new {@class = "btn btn-link"})
            </div>
        }
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/Scripts/validation")
}