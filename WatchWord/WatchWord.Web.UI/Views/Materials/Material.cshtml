@using WatchWord.Domain.Entity
@model WatchWord.Web.UI.Models.Materials.MaterialViewModel
@{
    ViewBag.Title = Model.Name;
}

<div class="materialInfo">
    <!--Basic info-->
    <div class="table-layout">
        <div class="table-cell fixed-width-200">
            <img src="@Model.Image" width="@Model.ImageWidth" height="@Model.ImageHeight" alt="Image" />
        </div>
        <div class="table-cell">
            <div><span id="material-name">@Model.Name</span></div>
            <div><span id="material-description">@Model.Description</span></div>
            <br />
        </div>
    </div>
    <!--Parsed words-->
    <div class="words">
        @foreach (var word in Model.Words)
        {
            string typeWord;
            switch (word.Type)
            {
                case VocabType.KnownWord:
                    typeWord = "knownWord";
                    break;
                case VocabType.LearnWord:
                    typeWord = "learnWord";
                    break;
                default:
                    typeWord = "word";
                    break;
            }
            <div id="word_@Model.Counter" class=@typeWord>@word.Word</div>
            Model.Counter++;
        }
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            var knownWordsMenu = {
                "moveToLearnnWords": { name: "Move to learning words" },
                sep1: "---------",
                "removeFromVocabulary": { name: "Remove from vocabulary" }
            }

            var learnWordsMenu = {
                "moveToKnownWords": { name: "Move to known words" },
                sep1: "---------",
                "removeFromVocabulary": { name: "Remove from vocabulary" }
            }

            var newWordsMenu = {
                "addToLearnnWords": { name: "Add to learning words" },
                sep1: "---------",
                "addToKnownWords": { name: "Add to known words" }
            }

            function contextMenuClick(key, options) {
                var m = "clicked: " + key + ", " + options.selector;
                window.console && console.log(m) || alert(m);
            }

            $.each($(".knownWord"), function (key, value) {
                $.contextMenu({
                    selector: "#" + value.id,
                    trigger: "left",
                    callback: contextMenuClick,
                    items: knownWordsMenu
                });
            });

            $.each($(".learnWord"), function (key, value) {
                $.contextMenu({
                    selector: "#" + value.id,
                    trigger: "left",
                    callback: contextMenuClick,
                    items: learnWordsMenu
                });
            });

            $.each($(".word"), function (key, value) {
                $.contextMenu({
                    selector: "#" + value.id,
                    trigger: "left",
                    callback: contextMenuClick,
                    items: newWordsMenu
                });
            });
        });
    </script>
}